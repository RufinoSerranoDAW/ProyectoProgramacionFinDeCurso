/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dialogos;

import conexiones.Con_RealizarConexion;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import ventanaprincipal.Main;

/**
 *
 * @author rufis
 */
public class Dlg_BorrarBaseDeDatos extends javax.swing.JDialog {

    private String baseDeDatos;
    private String servidor;
    private Integer puerto;
    private String usuario;
    private String contrasena;
    private ArrayList<String> listaBasesDeDatos;
    private DefaultComboBoxModel modeloBasesDeDatos= new DefaultComboBoxModel();;
    
    /**
     * Creates new form Dlg_BorrarBaseDeDatos
     */
    public Dlg_BorrarBaseDeDatos(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        generarListaBasesDeDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_eliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcb_bases_de_datos = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btn_eliminar.setText("Eliminar base de datos");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jcb_bases_de_datos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jcb_bases_de_datos, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(btn_eliminar)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcb_bases_de_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_eliminar)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        Connection con= null;

        servidor= Main.getIs().getServidor();
        puerto= Main.getIs().getPuerto();
        baseDeDatos= (String)jcb_bases_de_datos.getSelectedItem();
        usuario= Main.getIs().getUsuario();
        contrasena= Main.getIs().getContrasena();

        try {
            Con_RealizarConexion rc= new Con_RealizarConexion();
            con= rc.hazConexionBBDD(servidor, puerto, baseDeDatos, usuario, contrasena);
//            listaBasesDeDatos= rc.listaBases(con);
//            generarListaBasesDeDatos();
            
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Desea borrar la Base de Datos '" + baseDeDatos + "'?" + "\n" +
                "Si lo hace, no podrá recuperarla en un futuro.", "Borrado de Base de Datos", JOptionPane.YES_NO_OPTION, 3);
                if (respuesta == JOptionPane.YES_OPTION) {
                    Statement st = con.createStatement();

                    // Borrado de la base de datos:
                    st.executeUpdate(
                        "drop database " + baseDeDatos);
                    
                    JOptionPane.showMessageDialog(null, "Base de Datos eliminada correctamente.", "Base de Datos borrada", 1);
                    
                    modeloBasesDeDatos.removeAllElements();
                    generarListaBasesDeDatos(); 
                }
        } catch (SQLException ex) {
            if (ex.getErrorCode() == 1044) {
                JOptionPane.showMessageDialog(null, "Error: el usuario '" + usuario + "' no tiene acceso a la Base de Datos '" + baseDeDatos + "' .", "Error al eliminar a la base de datos", 2);
            }
            if (ex.getErrorCode() == 1049) {
                JOptionPane.showMessageDialog(null, "Error: la base de datos '" + baseDeDatos + "' no existe.", "Error al encontrar la Base de Datos", 2);
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    public void generarListaBasesDeDatos() {   
        Connection con= null;
        
        servidor= Main.getIs().getServidor();
        puerto= Main.getIs().getPuerto();
        usuario= Main.getIs().getUsuario();
        contrasena= Main.getIs().getContrasena();
        
        listaBasesDeDatos= new ArrayList();
        
        try {
            Con_RealizarConexion rc= new Con_RealizarConexion();
            con= rc.hazConexionNoBBDD(servidor, puerto, usuario, contrasena);
            
            listaBasesDeDatos= rc.listaBases(con);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
        crearModelo();
        
        jcb_bases_de_datos.setModel(modeloBasesDeDatos);
    }
    
    public void crearModelo() {
        for (int i = 0; i < listaBasesDeDatos.size(); i++) {
            modeloBasesDeDatos.addElement(listaBasesDeDatos.get(i));
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dlg_BorrarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dlg_BorrarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dlg_BorrarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dlg_BorrarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dlg_BorrarBaseDeDatos dialog = new Dlg_BorrarBaseDeDatos(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> jcb_bases_de_datos;
    // End of variables declaration//GEN-END:variables
}
