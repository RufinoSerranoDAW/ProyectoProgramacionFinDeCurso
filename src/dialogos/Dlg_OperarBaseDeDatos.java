/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dialogos;

import conexiones.Con_RealizarConexion;
import dialogos.operaciones.Dlg_Altas;
import dialogos.operaciones.Dlg_CrearTabla;
import dialogos.operaciones.Dlg_Modificaciones;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ventanaprincipal.Main;

/**
 *
 * @author rufis
 */
public class Dlg_OperarBaseDeDatos extends javax.swing.JDialog {
    
    private String servidor;
    private Integer puerto;
    private static String baseDeDatos;
    private String tabla;
    private String usuario;
    private String contrasena;
    private DefaultTableModel dtmContactos;
    private Dlg_ConectarBaseDeDatos padreConectar= null;
    private Dlg_CrearBaseDeDatos padreCrear= null;
    private ArrayList<String> listaTablas;
    private DefaultComboBoxModel modeloTabla= new DefaultComboBoxModel();
    private ArrayList<String> listaColumnas= new ArrayList();

    /**
     * Creates new form Dlg_OperarBaseDeDatos
     */
    public Dlg_OperarBaseDeDatos(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        if (parent instanceof Dlg_ConectarBaseDeDatos) {
            padreConectar= (Dlg_ConectarBaseDeDatos)parent;
        }
        
        if (parent instanceof Dlg_CrearBaseDeDatos) {
            padreCrear= (Dlg_CrearBaseDeDatos)parent;
        }
        
        test();
        
        generarListaTablas();
        
        dtmContactos= new DefaultTableModel();
        
        for (int i = 0; i < listaTablas.size(); i++) {
            modeloTabla.addElement(listaTablas.get(i));
        }
        
        // Crear columnas
        crearColumnas();
        
        // Asignamos el modelo a la vista tabla:
        tbl_contactos.setModel(dtmContactos);
        
        desactivarCampos();
        
        this.setTitle("Conexión con Base de Datos");
        //setIconImage(new ImageIcon(getClass().getResource("sonic.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_contactos = new javax.swing.JTable();
        btn_consulta_contacto = new javax.swing.JButton();
        btn_anadir_contacto = new javax.swing.JButton();
        btn_eliminar_contacto = new javax.swing.JButton();
        btn_mostrar_tabla = new javax.swing.JButton();
        btn_crear_tablaf = new javax.swing.JButton();
        btn_modificar_contacto = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txf_nombre = new javax.swing.JTextField();
        txf_direccion = new javax.swing.JTextField();
        spn_id = new javax.swing.JSpinner();
        spn_telefono = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jcb_bases_de_datos = new javax.swing.JComboBox<>();
        btn_crear_tabla = new javax.swing.JButton();
        btn_eliminar_tabla = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbl_contactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        tbl_contactos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_contactosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_contactos);

        btn_consulta_contacto.setText("Consultar contacto");
        btn_consulta_contacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consulta_contactoActionPerformed(evt);
            }
        });

        btn_anadir_contacto.setText("Añadir contacto");
        btn_anadir_contacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_anadir_contactoActionPerformed(evt);
            }
        });

        btn_eliminar_contacto.setText("Eliminar contacto");
        btn_eliminar_contacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar_contactoActionPerformed(evt);
            }
        });

        btn_mostrar_tabla.setText("Conectar con base de datos y mostrar tabla");
        btn_mostrar_tabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mostrar_tablaActionPerformed(evt);
            }
        });

        btn_crear_tablaf.setText("Crear tabla");
        btn_crear_tablaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_crear_tablafActionPerformed(evt);
            }
        });

        btn_modificar_contacto.setText("Modificar contacto");
        btn_modificar_contacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_contactoActionPerformed(evt);
            }
        });

        jLabel1.setText("Identificador:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Dirección:");

        jLabel4.setText("Teléfono:");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setText("Tabla:");

        jcb_bases_de_datos.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jcb_bases_de_datos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcb_bases_de_datos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_bases_de_datosActionPerformed(evt);
            }
        });

        btn_crear_tabla.setText("Crear nueva tabla");
        btn_crear_tabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_crear_tablaActionPerformed(evt);
            }
        });

        btn_eliminar_tabla.setText("Eliminar tabla seleccionada");
        btn_eliminar_tabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar_tablaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel5)
                .addGap(29, 29, 29)
                .addComponent(jcb_bases_de_datos, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn_crear_tabla)
                .addGap(18, 18, 18)
                .addComponent(btn_eliminar_tabla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcb_bases_de_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_crear_tabla)
                    .addComponent(btn_eliminar_tabla))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txf_nombre)
                            .addComponent(spn_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txf_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_anadir_contacto)
                            .addComponent(btn_eliminar_contacto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_consulta_contacto)
                            .addComponent(btn_modificar_contacto))))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(586, 586, 586)
                .addComponent(btn_mostrar_tabla)
                .addGap(180, 180, 180)
                .addComponent(btn_crear_tablaf)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spn_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txf_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(spn_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_anadir_contacto)
                            .addComponent(btn_consulta_contacto))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_eliminar_contacto)
                            .addComponent(btn_modificar_contacto))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_mostrar_tabla)
                    .addComponent(btn_crear_tablaf))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_contactosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_contactosMouseClicked
        // TODO add your handling code here:
        spn_id.setValue(dtmContactos.getValueAt(tbl_contactos.getSelectedRow(), 0));
        txf_nombre.setText((String)dtmContactos.getValueAt(tbl_contactos.getSelectedRow(), 1));
        txf_direccion.setText((String)dtmContactos.getValueAt(tbl_contactos.getSelectedRow(), 2));
        spn_telefono.setValue(dtmContactos.getValueAt(tbl_contactos.getSelectedRow(), 3));
    }//GEN-LAST:event_tbl_contactosMouseClicked

    private void btn_consulta_contactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consulta_contactoActionPerformed
        // TODO add your handling code here:
        Con_RealizarConexion rc= new Con_RealizarConexion();
        Connection con= null;
        PreparedStatement ps= null;
        ResultSet rs= null;

        try {
            con= rc.hazConexionBBDD(servidor, puerto, baseDeDatos, usuario, contrasena);
            ps= con.prepareStatement(
                "select * from contacto " +
                "where id = ?");

            ps.setInt(1, Integer.parseInt(spn_id.getValue().toString()));
            rs= ps.executeQuery();

            if (rs.next() == true) {
                txf_nombre.setText(rs.getString("nombre"));
                txf_direccion.setText(rs.getString("direccion"));
                spn_telefono.setValue(Integer.parseInt((rs.getString("telefono"))));
            } else {
                JOptionPane.showMessageDialog(null, "No se han encontrado datos");
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btn_consulta_contactoActionPerformed

    private void btn_anadir_contactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_anadir_contactoActionPerformed
        // TODO add your handling code here:
        Dlg_Altas miDialogoAltas= new Dlg_Altas(this, true);
        miDialogoAltas.setVisible(true);
    }//GEN-LAST:event_btn_anadir_contactoActionPerformed

    private void btn_eliminar_contactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar_contactoActionPerformed
        // TODO add your handling code here:ç
//        int res= 0;
//        PreparedStatement ps= null;
//        Connection con= null;
//
//        try {
//            con= hazConexion();
//            ps= con.prepareStatement(
//                "delete from contacto " +
//                "where id = ?");
//
//            ps.setInt(1, Integer.parseInt(spn_id.getValue().toString()));
//            res= ps.executeUpdate();
//
//            if (res > 0) {
//                JOptionPane.showMessageDialog(null, "Persona borrada correctamente.");
//            } else {
//                JOptionPane.showMessageDialog(null, "Error, no se ha podido borrar la persona.");
//            }
//        } catch (SQLException ex) {
//            System.out.println(ex.getMessage());
//        } finally {
//            try {
//                ps.close();
//                con.close();
//            } catch (SQLException ex) {
//                System.out.println(ex.getMessage());
//            }
//        }
    }//GEN-LAST:event_btn_eliminar_contactoActionPerformed

    private void btn_mostrar_tablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mostrar_tablaActionPerformed
        // TODO add your handling code here:
//        dtmContactos.setRowCount(0);
//
//        try {
//            Connection con= hazConexion();
//            Statement st = con.createStatement();
//
//            // Consultamos los datos de la tabla:
//            ResultSet rs = st.executeQuery("select * from contacto;");
//
//            // Bucle para cada resultado en la consulta
//            while (rs.next() == true) {
//                // Se crea un array que será una de las filas de la tabla.
//                Object[] fila = new Object[4]; // Hay cuatro columnas en la tabla
//
//                // Se rellena cada posición del array con una de las columnas de la tabla en base de datos
//                for (int i= 0; i < fila.length; i++){
//                    fila[i] = rs.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1.
//                }
//
//                // Se añade al modelo la fila completa
//                dtmContactos.addRow(fila);
//            }
//
//            ResultSetMetaData metaDatos = rs.getMetaData();
//
//            // Se obtiene el número de columnas
//            int numeroColumnas = metaDatos.getColumnCount();
//
//            // Se crea un array de etiquetas para rellenar
//            Object[] etiquetas = new Object[numeroColumnas];
//
//            // Se obtiene cada una de las etiquetas para cada columna
//            for (int i = 0; i < numeroColumnas; i++){
//                // Nuevamente, para ResultSetMetaData la primera columna es la 1
//                etiquetas[i] = metaDatos.getColumnLabel(i+1);
//            }
//
//            dtmContactos.setColumnIdentifiers(etiquetas);
//
//            tbl_contactos.updateUI();
//
//            // Salida de conexiones:
//            rs.close();
//            st.close();
//            con.close();
//        } catch (SQLException ex) {
//            System.out.println(ex.getMessage());
//        }
    }//GEN-LAST:event_btn_mostrar_tablaActionPerformed

    private void btn_crear_tablafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_crear_tablafActionPerformed
        // TODO add your handling code here:
//        try {
//            Connection con= hazConexion();
//            Statement st = con.createStatement();
//
//            // Borrado de tabla si existe:
//            st.executeUpdate(
//                "drop table if exists contacto;");
//
//            // Creación de una tabla:
//            st.executeUpdate(
//                "create table contacto " +
//                "(id Integer auto_increment, " +
//                "nombre varchar(20), " +
//                "direccion varchar(200), " +
//                "telefono Integer, " +
//                "primary key (id));");
//
//            // Inserción de valores:
//            String nombres[]= {"Juan", "Pedro", "Antonio"};
//            String direcciones[]= {"C/ Falsa 123", "C/ Algo 44", "C/ Cristiano Ronaldo Suuuuuuu"};
//            String telefonos[]= {"123", "456", "789"};
//
//            for (int i= 0; i < nombres.length; i++) {
//                st.executeUpdate(
//                    "insert into contacto (nombre, direccion, telefono) values " +
//                    "('"+nombres[i]+"', '"+direcciones[i]+"', '"+telefonos[i]+"')");
//            }
//        } catch (SQLException ex) {
//            System.out.println(ex.getMessage());
//        }
    }//GEN-LAST:event_btn_crear_tablafActionPerformed

    private void btn_modificar_contactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_contactoActionPerformed
        // TODO add your handling code here:
        Dlg_Modificaciones miDialogoMods= new Dlg_Modificaciones(this, true);
        miDialogoMods.setVisible(true);
    }//GEN-LAST:event_btn_modificar_contactoActionPerformed

    private void btn_eliminar_tablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar_tablaActionPerformed
        // TODO add your handling code here:
        Connection con= null;
        
        servidor= Main.getIs().getServidor();
        puerto= Main.getIs().getPuerto();
        
        if (padreConectar != null) {
            baseDeDatos= padreConectar.getBaseDeDatos();
        }
        
        if (padreCrear != null) {
            baseDeDatos= padreCrear.getBaseDeDatos();
        }
        
        usuario= Main.getIs().getUsuario();
        contrasena= Main.getIs().getContrasena();
        tabla= (String)jcb_bases_de_datos.getSelectedItem();
        
        try {
            Con_RealizarConexion rc= new Con_RealizarConexion();
            con= rc.hazConexionBBDD(servidor, puerto, baseDeDatos, usuario, contrasena);
            
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Desea borrar la tabla '" + tabla + "'?" + "\n" +
                "Si lo hace, no podrá recuperarla en un futuro.", "Borrado de Base de Datos", JOptionPane.YES_NO_OPTION, 3);
                if (respuesta == JOptionPane.YES_OPTION) {               
                    Statement st = con.createStatement();

                    st.executeUpdate(
                        "drop table if exists " + tabla);
                    
                    eliminarTabla();
                }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_eliminar_tablaActionPerformed

    private void btn_crear_tablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_crear_tablaActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
        
        Dlg_CrearTabla ct= new Dlg_CrearTabla(this, true);
        ct.setVisible(true);
    }//GEN-LAST:event_btn_crear_tablaActionPerformed

    private void jcb_bases_de_datosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_bases_de_datosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_bases_de_datosActionPerformed
  
    public void desactivarCampos() {
        //spn_id.setEnabled(false);
        txf_nombre.setEditable(false);
        txf_direccion.setEditable(false);
        spn_telefono.setEnabled(false);
    }

    public DefaultTableModel getDtmContactos() {
        return dtmContactos;
    }

    public void setDtmContactos(DefaultTableModel dtmContactos) {
        this.dtmContactos = dtmContactos;
    }
    
    public void generarListaTablas() {   
        Connection con= null;
        
        servidor= Main.getIs().getServidor();
        puerto= Main.getIs().getPuerto();
        
        if (padreConectar != null) {
            baseDeDatos= padreConectar.getBaseDeDatos();
        }
        
        if (padreCrear != null) {
            baseDeDatos= padreCrear.getBaseDeDatos();
        }
        
        usuario= Main.getIs().getUsuario();
        contrasena= Main.getIs().getContrasena();
        
        listaTablas= new ArrayList();
        
        try {
            Con_RealizarConexion rc= new Con_RealizarConexion();
            con= rc.hazConexionBBDD(servidor, puerto, baseDeDatos, usuario, contrasena);
            
            listaTablas= rc.listaTablas(con);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
        crearModelo();
        
        jcb_bases_de_datos.setModel(modeloTabla);
    }
    
    public void crearColumnas() {
        for (int i = 0; i < listaColumnas.size(); i++) {
            dtmContactos.addColumn(listaColumnas.get(i));
        }
    }
    
    public void crearModelo() {
        for (int i = 0; i < listaTablas.size(); i++) {
            modeloTabla.addElement(listaTablas.get(i));
        }
    }
    
    public void eliminarTabla() {
        modeloTabla.removeAllElements();
        generarListaTablas(); 
    }
    
    public String getBaseDeDatos() {
        return baseDeDatos;
    }

    public void setBaseDeDatos(String baseDeDatos) {
        this.baseDeDatos = baseDeDatos;
    }
    
    public void test() {
        Connection con= null;
        
        try {
            servidor= Main.getIs().getServidor();
            puerto= Main.getIs().getPuerto();
            baseDeDatos= padreConectar.getBaseDeDatos();
            usuario= Main.getIs().getUsuario();
            contrasena= Main.getIs().getContrasena();
            //tabla= txf_nombre_tabla.getText();
            
            Con_RealizarConexion rc= new Con_RealizarConexion();
            con= rc.hazConexionBBDD(servidor, puerto, baseDeDatos, usuario, contrasena);
            
            listaColumnas= rc.listaColumnas(con, "clientes");
            //listaColumnas= rc.listaColumnas(con, (String)jcb_bases_de_datos.getSelectedItem());
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dlg_OperarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dlg_OperarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dlg_OperarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dlg_OperarBaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Dlg_OperarBaseDeDatos dialog = new Dlg_OperarBaseDeDatos(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_anadir_contacto;
    private javax.swing.JButton btn_consulta_contacto;
    private javax.swing.JButton btn_crear_tabla;
    private javax.swing.JButton btn_crear_tablaf;
    private javax.swing.JButton btn_eliminar_contacto;
    private javax.swing.JButton btn_eliminar_tabla;
    private javax.swing.JButton btn_modificar_contacto;
    private javax.swing.JButton btn_mostrar_tabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcb_bases_de_datos;
    private javax.swing.JSpinner spn_id;
    private javax.swing.JSpinner spn_telefono;
    private javax.swing.JTable tbl_contactos;
    private javax.swing.JTextField txf_direccion;
    private javax.swing.JTextField txf_nombre;
    // End of variables declaration//GEN-END:variables
}
